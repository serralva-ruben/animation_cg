# Clear the current canvas
    canvas.delete("all")

    # Scale and translate the coordinates to the canvas system
    projected_vertices = [(x * canvas_width/2 + canvas_width/2, -y * canvas_height/2 + canvas_height/2, z) for x, y, z in vertices]

    # Draw the new vertices on the canvas
    for face in faces:
        # Get the vertices of the current face
        v1, v2, v3 = [projected_vertices[i] for i in face]

        # Perform clipping against the near and far planes
        if v1[2] < near or v2[2] < near or v3[2] < near or v1[2] > far or v2[2] > far or v3[2] > far:
            continue

        # Calculate the normal vector of the face
        normal = (v2[0] - v1[0]) * (v3[1] - v1[1]) - (v2[1] - v1[1]) * (v3[0] - v1[0])

        # Perform backface culling check
        if normal <= 0:
            continue

        # Draw the lines of the face
        for i in range(len(face)):
            x1, y1, _ = projected_vertices[face[i - 1]]
            x2, y2, _ = projected_vertices[face[i]]
            # Draw the line
            canvas.create_line(x1, y1, x2, y2)
